// This uses the SCSS pre-processor language for CSS design.  Like Pub, this allows for much cleaner code.  It also allows helps with more complicated designs, allowing other people to see how things woork.

// A couple things that make this cleaner are the consistent alignment of CSS property fields, and the common pattern of how the various mixins are used.

// COMMON MIXINS (ever expanding)
@mixin wh($w, $h) {
  width:  $w;
  height: $h;
}

@mixin tl($t, $l) {
  top:  $t;
  left: $l;
}

@mixin tr($t, $r) {
  top:   $t;
  right: $r;
}

@mixin pseudo {
  position: absolute;
  content:  '';
}

@mixin triangle {
  -webkit-clip-path:
    polygon(50% 0%,
            40% 100%,
            60% 100%);
  clip-path:
    polygon(50% 0%,
            40% 100%,
            60% 100%);
}


// $className -  base name for line divs (allows indenpendent graphs)
// $barWeight -  thickness of each bar
// $barRadius -  end radius of bars
// $values -     relative values for each bar (include units in list)
// $colors -     list of matching colors for bars
// $animations - list of matching annimations for bars (overkill?)
@mixin bar-graph($className, $barWeight, $barRadius, $values, $colors, $animations) {
  @for $i from 1 through length($colors) {
    .#{$className}-#{$i} {
      height:           $barWeight;
      width:            nth($values, $i);
      background-color: nth($colors, $i);
      border-radius:    0 $barRadius $barRadius 0;
      animation:        nth($animations, $i);
    }
  }
}

// ANIMATION DECLARATIONS
//animation: show-NAME $animation-duration $animation-timing-function $animation-delay $animation-iteration-count $animation-direction $animation-fill-mode $animation-play-state;
$animation-duration:         10s;
$animation-delay:            0s;
$animation-timing-function:  linear;     // linear, ease,	ease-in,ease-out, ease-in-out, step-start, step-end, steps(int,start|end), cubic-bezier(n,n,n,n), initial, inherit
$animation-iteration-count:  infinite; // infinite, <number>
$animation-direction:        normal;   // normal, reverse, alternate, alternate-reverse, initial, inherit
$animation-fill-mode:        forwards;     // none, forwards, backwards, both, initial, inherit
$animation-play-state:       running;  // paused, rinning, initial, inherit
$animation-params: $animation-duration $animation-timing-function $animation-delay $animation-iteration-count $animation-direction $animation-fill-mode $animation-play-state;

// APPLICATION SPECIFIC VARIABLES

$black:          #000000;
$white:          #FFFFFF;
$yellow:         #FBDE18;

$body-color:        $black;
$background-color:  $black;
$title-color:       $white;
$title-span-color:  $white;
$learning-color:    $white;
$footer-color:      $white;
$footer-link:       $white;


// COMMON CLASS STYLES
body {
  background:    $background-color;
  color:         $body-color;
  font-family:   sans-serif;
}

.box {
  position:      relative;
  @include       wh(400px, 400px);
  margin:        auto;
  background:    none;
  //border:       solid 1px black;
  //overflow:     hidden;
}

.title {
  font-size:     1.5em;
  text-align:    center;
  color:         $title-color;
  margin-bottom: 0px;
}

.title span {
  color:         $title-span-color;
}


// APPLICATION SPECIFIC STYLES
@mixin ear {
  position:      absolute;
  @include       wh(15%, 15%);
  border-radius: 0.5em;
  background:    $yellow;
  transform:     rotate(45deg);
}

.ear-left {
  @include       ear;
  @include       tl(25%, 7.5%);
}

.ear-right {
  @include       ear;
  @include       tr(25%, 7%);
}

.edges {
  position:      absolute;
  @include       wh(55%, 190%);
  @include       tl(-55%, 22.5%);
  margin:        auto;
  //background:    grey;
  border-radius: 50%;
  overflow:      hidden;
  &:after{
    content:'';
    position:absolute;
    @include       wh(200%, 20%);
    @include       tl(40%, -50%);
    border-radius: inherit;
    background:    $yellow;
  }
  transform:       scale(1.5, 1.5);
}

@mixin whisker {
  position:      absolute;
  @include       wh(400px, 400px);
  border-radius: 50%;
  z-index:       1;
}

.whisker1-left {
  @include       whisker;
  @include       tl(53%, -63%);
  border-left:   solid 120px $black;
  transform:     rotate(-20deg);
}
.whisker2-left {
  @include       whisker;
  @include       tl(54%, -60%);
  border-left:   solid 150px $black;
  transform:     rotate(-22deg);
}
.whisker3-left {
  @include       whisker;
  @include       tl(54%, -55%);
  border-left:   solid 180px $black;
  transform:     rotate(-28deg);
}

.whisker1-right {
  @include       whisker;
  @include       tr(53%, -63%);
  border-left:   solid 120px $black;
  transform:     rotate(20deg) scale(-1, 1);
}
.whisker2-right {
  @include       whisker;
  @include       tr(54%, -60%);
  border-left:   solid 150px $black;
  transform:     rotate(22deg) scale(-1, 1);
}
.whisker3-right {
  @include       whisker;
  @include       tr(54%, -55%);
  border-left:   solid 180px $black;
  transform:     rotate(28deg) scale(-1, 1);
}

@mixin nose {
  position:      absolute;
  background:    $black;
  z-index:       1;
}

.nose1 {
  @include       nose;
  @include       wh(40px, 40px);
  @include       tl(50%, 40%);
  border-radius: 0.9em 0.5em 50% 0.5em;
  transform:     rotate(45deg);
}

.nose2 {
  @include       nose;
  @include       wh(10px, 40px);
  @include       tl(53%, 47%);
}

.nose3 {
  @include       nose;
  @include       wh(40px, 40px);
  @include       tl(58%, 40%);
  transform:     rotate(45deg);
}

@mixin eye {
  position:      absolute;
  @include       wh(25px, 25px);
  border-radius: 50%;
  background:    $black;
  z-index:       1;
  animation: show-blink $animation-duration $animation-timing-function $animation-delay $animation-iteration-count $animation-direction $animation-fill-mode $animation-play-state;
}

.eye-left {
  @include       eye;
  @include       tl(45.5%, 20%);
}

.eye-right {
  @include       eye;
  @include       tr(45.5%, 20%);
}

@mixin label {
  position:      absolute;
  @include       wh(25px, 25px);
  color:         $yellow;
  font-family:   'Rozha One', serif;
}

.label1 {
  @include       label;
  @include       tl(64%, 12%);
  font-size:     5em;
  &::first-letter {
    font-size: 140%;
  }
  transform:     scale(1.5, 1);
}

.label2 {
  @include       label;
  @include       tl(90%, 68%);
  font-size:     1.7em;
  transform:     scale(1.2, 1);
}


.learning {
  color:         $learning-color;
  text-align:    center;
  margin-top:    0px;
}

// FOOTER
.footer  {
  color: $footer-color;
  p a:active,
  p a:focus,
  p a:hover,
  p a:visited {
    color: $footer-link;
  }
  //hr { display: none; }
  text-align: center;
  //margin-top: 60px;
}


// ANIMATION FUNCTIONS
@keyframes show-blink {
   0%   { transform: scale(1, 1); }
  20%   { transform: scale(1, 1); }
  21%   { transform: scale(1, 0.1); }
  22%   { transform: scale(1, 1);  }
  100%  { transform: scale(1, 1); }
}
