/*
NOTES:
Happy about:
- organization of code
- use of Pug form for svg
- my understanding of CSS selectors
- learned more about SVG syntax
- understand annimation in CSS pretty well

Disappointed with:
- struggles with SVG and filtering
- all the manual tweeking of positions to get segments to lineup
- postioning and orientation is off

*/

@mixin wh($w, $h) {
  width:  $w;
  height: $h;
}

@mixin tl($t, $l) {
  top:  $t;
  left: $l;
}

@mixin tr($t, $r) {
  top:   $t;
  right: $r;
}

@mixin pseudo {
  position: absolute;
  content:  '';
}


$black:          #000000;
$white:          #FFFFFF;
$grey:           #777777;

$container-delay:     0s;
$container-time:      10s;


$outline-color:  $black;
$red-color:      #AD262D;
$yellow-color:   #FACD66;

$background:       $black;
$title-color:      $red-color;
$title-span-color: $yellow-color;
$footer-color:     $red-color;
$footer-link:      $yellow-color;

$glow-delay:     0s;
$glow-time:      10s;

body {
  background:    $background;
  color:         $grey;
  font-family:   sans-serif;
}

.title {
  font-size:     1.5em;
  text-align:    center;
  color:         $title-color;
}

.title span {
  color:         $title-span-color;
}

.box {
  position:      relative;
  @include       wh(600px, 600px);
  margin:        auto;
  background:    none;
  //border:        solid 1px;
  overflow:      hidden;
}

// kudge to move set of of segments
.container {
  position:      absolute;
  @include       wh(300px, 300px);
  @include       tl(80px, 180px);
  background:    none;
  //border:        solid 1px;
  //overflow:      hidden;
  transform:     scale(0.7, 0.7) translate(-200px, -200px);
  animation-name:              show-container;
  animation-delay:             $container-delay;
  animation-duration:          $container-time;
  animation-fill-mode:         forwards;
  animation-iteration-count:   infinite;
  //animation-timing-function:   step-end;
}

svg {
  position:      absolute;
  @include       wh(300px, 320px);
  @include       tl(-0px, -0px);
  background:    none;
}

#segment-inner {
  position:      absolute;
  @include       wh(200px, 300px);
  background:    none;
  transform:     scale(0.8, 0.8) translate(120px, 90px);
}

@for $i from 1 through 10 {
  .segment:nth-child(#{$i})  {
    position:      absolute;
    @include       wh(200px, 300px);
    @include       tl(40px, 180px);
    margin:        auto;
    background:    none;
    //border:        solid 1px white;
    transform-origin: center bottom;
    transform: rotate( $i*36 + deg);
  }
}

.section-circle {
  position:      absolute;
  @include       wh(200px, 200px);
  @include       tl(240px, 185px);
  transform:     scale(1.5, 1.5);
}

#circle-inner {
  position:      absolute;
  @include       wh(200px, 300px);
  background:    none;
  transform:     scale(0.9, 0.9) translate(60px, 40px);
}

.footer  {
  color: $footer-color;
  p a:active,
  p a:focus,
  p a:hover,
  p a:visited {
    color: $footer-link;
  }
  text-align: center;
}

// ANIMATIONS
@keyframes show-container {
   0% {
   opacity:   0.1;
   }
   8% {
   opacity:   0.7;
   }
   10% {
   opacity:   0.2;
   }
   12% {
   opacity:   0.9;
   }
   15% {
   opacity:   0.2;
   }
   20% {
   opacity:   1.0;
   }
  100% {
   opacity:   1.0;
   }
}
